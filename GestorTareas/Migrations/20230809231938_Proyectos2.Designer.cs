// <auto-generated />
using System;
using GestorTareas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorTareas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230809231938_Proyectos2")]
    partial class Proyectos2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestorTareas.Models.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GestorTareas.Models.Encargados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Encargados");
                });

            modelBuilder.Entity("GestorTareas.Models.EncargadosTareas", b =>
                {
                    b.Property<int>("EncargadoId")
                        .HasColumnType("int");

                    b.Property<int>("TareaId")
                        .HasColumnType("int");

                    b.Property<int?>("EncargadosId")
                        .HasColumnType("int");

                    b.Property<int?>("TareasId")
                        .HasColumnType("int");

                    b.HasKey("EncargadoId", "TareaId");

                    b.HasIndex("EncargadosId");

                    b.HasIndex("TareasId");

                    b.ToTable("EncargadosTareas");
                });

            modelBuilder.Entity("GestorTareas.Models.Estados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("GestorTareas.Models.Niveles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Niveles");
                });

            modelBuilder.Entity("GestorTareas.Models.Proyectos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("GestorTareas.Models.SubTareas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_prevista")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TareaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TareaId");

                    b.ToTable("SubTareas");
                });

            modelBuilder.Entity("GestorTareas.Models.Tareas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NivelId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("GestorTareas.Models.EncargadosTareas", b =>
                {
                    b.HasOne("GestorTareas.Models.Encargados", "Encargados")
                        .WithMany("EncargadosTareas")
                        .HasForeignKey("EncargadosId");

                    b.HasOne("GestorTareas.Models.Tareas", "Tareas")
                        .WithMany("EncargadosTareas")
                        .HasForeignKey("TareasId");

                    b.Navigation("Encargados");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("GestorTareas.Models.Proyectos", b =>
                {
                    b.HasOne("GestorTareas.Models.Categorias", "Categoria")
                        .WithMany("Proyectos")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GestorTareas.Models.SubTareas", b =>
                {
                    b.HasOne("GestorTareas.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("GestorTareas.Models.Tareas", "Tarea")
                        .WithMany("SubTarea")
                        .HasForeignKey("TareaId");

                    b.Navigation("Estado");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("GestorTareas.Models.Tareas", b =>
                {
                    b.HasOne("GestorTareas.Models.Niveles", "Nivel")
                        .WithMany()
                        .HasForeignKey("NivelId");

                    b.HasOne("GestorTareas.Models.Proyectos", "Proyecto")
                        .WithMany("Tareas")
                        .HasForeignKey("ProyectoId");

                    b.Navigation("Nivel");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("GestorTareas.Models.Categorias", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("GestorTareas.Models.Encargados", b =>
                {
                    b.Navigation("EncargadosTareas");
                });

            modelBuilder.Entity("GestorTareas.Models.Proyectos", b =>
                {
                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("GestorTareas.Models.Tareas", b =>
                {
                    b.Navigation("EncargadosTareas");

                    b.Navigation("SubTarea");
                });
#pragma warning restore 612, 618
        }
    }
}
